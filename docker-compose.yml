version: '3'
services:
    prometheus:
        image: 'prom/prometheus:v2.1.0'
        container_name: prometheus

        ports:
            - '9090:9090'
        user: root
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--web.console.libraries=/usr/share/prometheus/console_libraries'
            - '--web.console.templates=/usr/share/prometheus/consoles'
            - '--web.enable-admin-api'  
        volumes:
            - './prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro'
            - './prometheus/alert.rules:/etc/prometheus/alert.rules'
        depends_on:
            - cadvisor
        networks:
            - monitoring_internal
            - monitoring_external
        restart: on-failure      
    cadvisor:
        image: google/cadvisor
        container_name: cadvisor
        user: root
        ports:
            - '8484:8484'
        volumes:
            - '/:/rootfs:ro'
            - '/var/run:/var/run:rw'
            - '/sys:/sys:ro'
        command: "--enable_load_reader=true"     
        networks:
            - monitoring_internal
        restart: on-failure      
    alertmanager:
        image: prom/alertmanager
        container_name: alertmanager
        ports:
            - '9093:9093'
        volumes:
            - './alertmanager/:/etc/alertmanager/'
        command:
            - '--config.file=/etc/alertmanager/config.yml'
            - '--storage.path=/alertmanager'
        networks:
            - monitoring_internal
            - monitoring_external
        restart: on-failure      
    node-exporter:
        image: prom/node-exporter
        container_name: node-exporter
        volumes:
            - '/proc:/host/proc:ro'
            - '/sys:/host/sys:ro'
            - '/:/rootfs:ro'
        command:
            - '--path.procfs=/host/proc'
            - '--path.sysfs=/host/sys'
            - '--collector.filesystem.ignored-mount-points'
            - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
        ports:
            - '9100:9100'
        networks:
            - monitoring_internal
        restart: on-failure
    grafana:
        image: grafana/grafana
        container_name: grafana
        user: root
        depends_on:
            - prometheus
        ports:
            - '3000:3000'
        volumes:
            - 'grafana_data:/var/lib/grafana'
            - './grafana/provisioning/:/etc/grafana/provisioning/'
        env_file:
            - ./grafana/config.monitoring
        networks:
            - monitoring_external
        restart: on-failure
    blackbox:
        container_name: blackbox    
        image: prom/blackbox-exporter:latest
        depends_on:
            - prometheus
        volumes:
            - './blackbox/blackbox.yml:/etc/blackbox_exporter/config.yml'
        ports:
            - '9115:9115'
        command: '--config.file=/etc/blackbox_exporter/config.yml' 
        networks:
            - monitoring_internal
            - monitoring_external 
        restart: on-failure        
networks:
    monitoring_external:
    monitoring_internal: 
        internal: true
volumes:
    grafana_data: {}
    prometheus_data: {}

